apiVersion: mastra/v1
kind: MastraPod
metadata:
  name: weather-pod
  namespace: demo
spec:
  config:
    observability:
      enabled: true
      level: debug
    memory:
      type: in-memory
    outputFormat: json
  resources:
    - apiVersion: mastra/v1
      kind: Agent
      metadata:
        name: weather-agent
        namespace: demo
      spec:
        model:
          provider: openai
          name: gpt-4
        instructions: |
          你是一个专业的天气助手。根据用户提供的位置，提供天气信息。
          如果用户要求附加信息，还需提供穿衣建议、出行建议等相关信息。
          
          天气信息应包含：温度、湿度、风力风向、天气状况、空气质量。

    - apiVersion: mastra/v1
      kind: Workflow
      metadata:
        name: weather-workflow
        namespace: demo
      spec:
        description: "天气信息查询工作流"
        input:
          location:
            type: string
            description: "查询天气的位置"
          additionalInfo:
            type: boolean
            description: "是否需要附加信息"
            default: false
        steps:
          - id: validateInput
            type: function
            function:
              name: validateLocation
              code: |
                (input) => {
                  if (!input.location) {
                    return { hasLocation: false };
                  }
                  return { hasLocation: true, location: input.location };
                }
            next: 
              condition:
                if: "{{validateInput.hasLocation}}"
                then: processWeatherRequest
                else: handleMissingLocation
              
          - id: handleMissingLocation
            type: function
            function:
              name: missingLocationHandler
              code: |
                () => {
                  return { error: "请提供一个有效的位置进行天气查询。" };
                }
            next: formatResponse
            
          - id: processWeatherRequest
            type: agent
            agent:
              name: weather-agent
              input: |
                请提供{{validateInput.location}}的天气信息。
                {{#if input.additionalInfo}}
                请同时提供穿衣建议和出行建议。
                {{/if}}
            next: formatResponse
            
          - id: formatResponse
            type: function
            function:
              name: responseFormatter
              code: |
                (input, context) => {
                  if (context.handleMissingLocation && context.handleMissingLocation.error) {
                    return { message: context.handleMissingLocation.error };
                  }
                  
                  return {
                    message: "天气查询结果",
                    location: context.validateInput.location,
                    weatherInfo: context.processWeatherRequest,
                    timestamp: new Date().toISOString()
                  };
                } 